
Перем ПеречисленияКласса Экспорт; // Соответствие

Перем ОписаниеОшибкиКласса;

Функция ВСтроку(Значение) Экспорт
	
	Если ТипЗнч(Значение) = Тип("Сценарий") Тогда
		Возврат Значение.ВСтроку();
	КонецЕсли;

	Возврат Строка(Значение);
	
КонецФункции

Функция ПодробноеОписание() Экспорт

	СтрокаОписания = "";

	Для каждого КлючЗначение Из ПеречисленияКласса Цикл
		
		СтрокаОписания = СтрокаОписания + СтрШаблон("%1: %2", КлючЗначение.Значение.Наименование, КлючЗначение.Значение.ДополнительнаяСправка) + Символы.ПС;

	КонецЦикла;

	Возврат СтрокаОписания;
	
КонецФункции

Функция УстановитьЗначение(Знач ВходящееЗначение, Значение) Экспорт

	ЗначениеПеречисления = ПеречисленияКласса[ВходящееЗначение];
	
	Если НЕ ЗначениеПеречисления = Неопределено Тогда
		Значение = ЗначениеПеречисления.Значение;
	Иначе
		ОписаниеОшибкиКласса = "Выбранное значение перечисления не соответствует доступным";
	КонецЕсли;

	Возврат Значение;

КонецФункции 

Функция Ошибка(ЕстьОшибка = Ложь) Экспорт
	
	Если НЕ ПустаяСтрока(ОписаниеОшибкиКласса) Тогда
		ЕстьОшибка = Истина;
	КонецЕсли;

	Возврат ОписаниеОшибкиКласса;
	
КонецФункции

Процедура УстановитьПеречисления(Знач СоответствиеПеречислений) Экспорт
	
	Если Тип("Соответствие") = ТипЗнч(СоответствиеПеречислений) Тогда
		ПеречисленияКласса = СоответствиеПеречислений;
	КонецЕсли;
		
КонецПроцедуры

Процедура ДобавитьПеречисление(Знач ПользовательскоеЗначение, Знач Значение, Знач ДополнительнаяСправка = "") Экспорт

	ПеречисленияКласса.Вставить(ПользовательскоеЗначение, НовоеПеречисление(ПользовательскоеЗначение, Значение, ДополнительнаяСправка));
	
КонецПроцедуры

Функция НовоеПеречисление(Знач Наименование, Знач Значение, Знач ДополнительнаяСправка = "")
	
	Возврат Новый Структура("Наименование, Значение, ДополнительнаяСправка", Наименование, Значение, ДополнительнаяСправка);

КонецФункции

ПеречисленияКласса = Новый Соответствие;

ОписаниеОшибкиКласса = "";