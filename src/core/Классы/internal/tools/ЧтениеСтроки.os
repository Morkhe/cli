#Использовать logos

Перем ТекущийИндекс;

Перем Длина;
Перем ДлинаМассива;

Перем СтрокаЧтения;
Перем МассивСимволов;

Перем Лог;

Перем ПервоеЧтение;


Процедура ПриСозданииОбъекта(Знач ВходящаяСтрокаЧтения)

	СтрокаЧтения = ВходящаяСтрокаЧтения;
	
	Длина =  СтрДлина(СтрокаЧтения);

	МассивСимволов = Новый Массив;

	Прочитать();
	
	ПервоеЧтение = Истина;

	ТекущийИндекс = ?(МассивСимволов.Количество() > 0, 0 , -1);
	
	Если ТекущийИндекс = -1 Тогда
		ПервоеЧтение = Ложь;
	КонецЕсли;

КонецПроцедуры

Функция Прочитать() Экспорт
	
	МассивСимволов.Очистить();
	
	Для ИИ = 1 По Длина Цикл
		
		МассивСимволов.Добавить(Сред(СтрокаЧтения, ИИ, 1));

	КонецЦикла;

	ДлинаМассива = МассивСимволов.ВГраница();

	Лог.Отладка("Количество символов в строке %1", ДлинаМассива);

	Возврат ЭтотОБъект;

КонецФункции

Функция ВМассив(Знач НачальныйИндекс = Неопределено, Знач КонечныйИндекс = Неопределено) Экспорт

	МассивВозврата = Новый Массив;
	
	Если НачальныйИндекс = Неопределено 
		И КонечныйИндекс = Неопределено Тогда
		Возврат МассивВозврата.Добавить(СтрокаЧтения);
	КонецЕсли;
	
	Если (ТипЗнч(КонечныйИндекс) = Тип("Число")
		И КонечныйИндекс > ДлинаМассива) 
		Или КонечныйИндекс = Неопределено Тогда
		
		КонечныйИндекс = ДлинаМассива;
	
	КонецЕсли;

	Если НачальныйИндекс = Неопределено Тогда
		НачальныйИндекс = 0;
	КонецЕсли;

	Для ИндексСимвола = НачальныйИндекс По КонечныйИндекс Цикл
		
		МассивВозврата.Добавить(МассивСимволов[ИндексСимвола]);

	КонецЦикла;

	Возврат МассивВозврата;
	
КонецФункции

Функция ВМассивС(Знач НачальныйИндекс) Экспорт
	Возврат ВМассив(НачальныйИндекс);
КонецФункции

Функция ВМассивПо(Знач КонечныйИндекс) Экспорт
	Возврат ВМассив(,КонечныйИндекс);	
КонецФункции

Функция ВЧтениеСтроки(НачальныйИндекс = Неопределено, КонечныйИндекс = Неопределено) Экспорт
	
	Возврат Новый ЧтениеСтроки(ВСтроку(НачальныйИндекс, КонечныйИндекс));
	
КонецФункции

Функция ВЧтениеСтрокиС(НачальныйИндекс) Экспорт
	
	Возврат Новый ЧтениеСтроки(ВСтрокуС(НачальныйИндекс));
	
КонецФункции

Функция ВЧтениеСтрокиПо(КонечныйИндекс) Экспорт
	
	Возврат Новый ЧтениеСтроки(ВСтрокуПо(КонечныйИндекс));
	
КонецФункции

Функция ВСтроку(Знач НачальныйИндекс = Неопределено, Знач КонечныйИндекс = Неопределено) Экспорт
	
	Если НачальныйИндекс = Неопределено 
		И КонечныйИндекс = Неопределено Тогда
		Возврат СтрокаЧтения;
	КонецЕсли;
	
	Если (ТипЗнч(КонечныйИндекс) = Тип("Число")
		И КонечныйИндекс > ДлинаМассива)
		Или КонечныйИндекс = Неопределено Тогда
		
		КонечныйИндекс = ДлинаМассива;
	
	КонецЕсли;

	Возврат СтрСоединить(ВМассив(НачальныйИндекс, КонечныйИндекс));

КонецФункции

Функция ВСтрокуС(НачальныйИндекс) Экспорт
	Возврат ВСтроку(НачальныйИндекс);
КонецФункции

Функция ВСтрокуПо(КонечныйИндекс) Экспорт
	Возврат ВСтроку(, КонечныйИндекс);
КонецФункции

Функция Читать(Знач Прибавка = 1) Экспорт

	Если ПервоеЧтение Тогда
		ПервоеЧтение = Ложь;
		Возврат Истина;
	КонецЕсли;

	Если КонецСтроки() Тогда
		Возврат Ложь;
	КонецЕсли;

	Лог.Отладка("Выполняю чтение");

	ТекущийИндекс = ТекущийИндекс + Прибавка;

	Возврат Истина;
	
КонецФункции

Функция ЧитатьПока(Знач ПроверкаПродолженияЧтения) Экспорт
	
	Если НЕ ПроверкаПродолженияЧтения Тогда
		Назад();
		Возврат Ложь;
	КонецЕсли;

	Возврат Читать();
		
КонецФункции

Функция ЧитатьДо(Знач ОграничениеЧтения = Неопределено) Экспорт
	
	НачальныйИндекс = ТекущийИндекс;
	УспешноПрочитали = Ложь;

	Лог.Отладка("ЧитатьДо: ОграничениеЧтения: %1", ОграничениеЧтения);

	Если ТипЗнч(ОграничениеЧтения) = Тип("Строка") Тогда
		ПродолжитьЧтение = Ложь;

		Пока Читать() Цикл
			
			ПродолжитьЧтение = Истина;
			
			Выполнить(ОграничениеЧтения);
			
			Если Не ПродолжитьЧтение Тогда
				УспешноПрочитали = Истина;
				Прервать;
			КонецЕсли;
		
		КонецЦикла;

		Если УспешноПрочитали Тогда
			Назад();
		КонецЕсли;

		Если ПродолжитьЧтение 
			И КонецСтроки() Тогда
			УспешноПрочитали = Истина;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ОграничениеЧтения) = Тип("Число") Тогда
		УспешноПрочитали = ЧитатьДоИндекса(ОграничениеЧтения);
	КонецЕсли;	

	Если НЕ УспешноПрочитали Тогда
		ТекущийИндекс = НачальныйИндекс;
	КонецЕсли;

	Возврат УспешноПрочитали;

КонецФункции

Функция ЧитатьДоИндекса(Знач ТребуемыйИндекс) Экспорт

	Если МассивСимволов.ВГраница() < ТребуемыйИндекс Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекущийИндекс = ТребуемыйИндекс - 1;
	
	Возврат Истина;

КонецФункции

Функция ЧитатьДоСимвола(Знач ВходящийСимвол) Экспорт
	
	Возврат ЧитатьДо(СтрШаблон("ПродолжитьЧтение = НЕ ЭтоСимвол(""%1"")",ВходящийСимвол));

КонецФункции

Функция Назад() Экспорт

	ТекущийИндекс = ТекущийИндекс - 1;
	
	Возврат ЭтотОБъект;
	
КонецФункции

Функция СброситьЧтение() Экспорт

	ТекущийИндекс = 0;
	
	Возврат ЭтотОБъект;
	
КонецФункции

Функция ЧитатьНа(Знач Прибавка = 1) Экспорт
	
	Возврат Читать(Прибавка);
	
КонецФункции

Функция ПолучитьСимвол() Экспорт

	Возврат МассивСимволов[ТекущийИндекс];

КонецФункции

Функция ЭтоБуква() Экспорт
	
	Значение = ПолучитьСимвол();
	
	РегуляркаДляПочты =  Новый РегулярноеВыражение ("[a-zA-Z]");
	КоллекцияСовпадений = РегуляркаДляПочты.НайтиСовпадения(Значение);
	
		
	Возврат КоллекцияСовпадений.Количество() = 1;
	
КонецФункции

Функция ЭтоБольшаяБуква() Экспорт
	
	Значение = ПолучитьСимвол();
	
	РегуляркаДляПочты =  Новый РегулярноеВыражение ("[A-Z]");
	КоллекцияСовпадений = РегуляркаДляПочты.НайтиСовпадения(Значение);
	
		
	Возврат КоллекцияСовпадений.Количество() = 1;
	
КонецФункции

Функция ЭтоМаленькаяБуква() Экспорт
	
	Значение = ПолучитьСимвол();
	
	РегуляркаДляПочты =  Новый РегулярноеВыражение ("[a-z]");
	КоллекцияСовпадений = РегуляркаДляПочты.НайтиСовпадения(Значение);
	
		
	Возврат КоллекцияСовпадений.Количество() = 1;
	
КонецФункции

Функция ЭтоЧисло() Экспорт
	
	Значение = ПолучитьСимвол();

	РегуляркаДляПочты =  Новый РегулярноеВыражение ("\d");
    КоллекцияСовпадений = РегуляркаДляПочты.НайтиСовпадения(Значение);

    
    Возврат КоллекцияСовпадений.Количество() = 1;
	
КонецФункции

Функция ЭтоСимвол(Знач СимволПроверки) Экспорт
	
	Возврат ПолучитьСимвол() = СимволПроверки;

КонецФункции

Функция ТекущийСимвол() Экспорт
	
	Возврат ПолучитьСимвол();

КонецФункции

Функция СледующийСимвол() Экспорт
	
	ЗапределамиМассива = ТекущийИндекс + 1 > МассивСимволов.ВГраница();
	Если ЗапределамиМассива Тогда
		Возврат "";
	КонецЕсли;

	Возврат МассивСимволов[ТекущийИндекс+1];

КонецФункции

Функция СледующийСимволЭто(Знач СимволПроверки) Экспорт
	
	Значение = СледующийСимвол();

	Возврат Значение = СимволПроверки;

КонецФункции

Функция ТекущийИндекс() Экспорт
	Возврат ТекущийИндекс;
КонецФункции


Функция КонецСтроки() Экспорт

	Если ДлинаМассива = -1 Тогда
		Возврат Истина;
	КонецЕсли;

	Возврат ТекущийИндекс = МассивСимволов.ВГраница();
	
КонецФункции

Функция ИндексЗаПределомМассива() Экспорт
	
	Возврат ТекущийИндекс > МассивСимволов.ВГраница();

КонецФункции


Лог = Логирование.ПолучитьЛог("oscript.lib.string_read");
//Лог.УстановитьУровень(УровниЛога.Отладка);